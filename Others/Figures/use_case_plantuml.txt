@startuml
!theme aws-orange
' Apply a Material-like outline theme

' Force a top-to-bottom layout for a cleaner vertical flow
top to bottom direction

' Increase overall scale slightly
scale 1.2

' Make rectangles (system boundary, DB) have rounded corners
skinparam rectangleStyle roundCorner

' Define primary actors
actor "Recruiter" as R
actor "Candidate" as C

' System boundary for all internal use cases
rectangle "Recruitment System" as RS {

    ' Use cases within the system
    usecase "Upload Resume &\nJob Description" as UC1
    usecase "Parse Resume/\nJob Desc Data" as UC2
    usecase "Store Resume/\nJob Desc in DB" as UC3
    usecase "Generate\nMatching Score" as UC4
    usecase "View Matched\nCandidates" as UC5
    usecase "Analyze Bias\nDetection" as UC6
    usecase "Explain Model\nDecisions" as UC7
    usecase "Create/Share\nCustom Application Form" as UC9
    usecase "Submit Resume\nvia Custom Form" as UC8

    ' Use case relationships
    UC1 --> UC2 : <<include>>\n(Parse & Transform Data)
    UC2 --> UC3 : <<include>>\n(Store Parsed Data)
    UC1 --> UC4 : triggers\n(Generate Score)
    
    UC8 --> UC2 : <<include>>\n(Parse & Transform Data)
    UC8 --> UC4 : triggers\n(Generate Score)

    ' "View Matched Candidates" optionally extended by bias detection and explanations
    UC5 --> UC6 : <<extend>>
    UC5 --> UC7 : <<extend>>
}

' Represent the NoSQL database as an external rectangle
rectangle "NoSQL Database" as DB {
  note top
    Stores resumes,
    job descriptions,
    match scores,
    and bias reports
  end note
}

' Connect actors to use cases
R --> UC1 : (Uploads Resumes/\nJob Descs)
R --> UC5 : (Views Candidates)
R --> UC9 : (Creates /\nShares Custom Form)

C --> UC8 : (Submits Resume\nvia Custom Form)

' Show data flow between the system and the external database
RS --> DB : Store &\nRetrieve Data
@enduml